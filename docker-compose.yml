version: '3.8'

services:
  app:
    build: .
    ports:
      - "3030:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - GITLAB_HOST=${GITLAB_HOST}
      - GITLAB_TOKEN=${GITLAB_TOKEN}
      - GITLAB_GROUP_ID=${GITLAB_GROUP_ID}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - GITLAB_CLIENT_ID=${GITLAB_CLIENT_ID}
      - GITLAB_CLIENT_SECRET=${GITLAB_CLIENT_SECRET}
      - PIPELINE_PROJECT_ID=${PIPELINE_PROJECT_ID}
      - PIPELINE_TRIGGER_TOKEN=${PIPELINE_TRIGGER_TOKEN}
      - HOST_TEST_ADDRESS=${HOST_TEST_ADDRESS}
      - HOST_TEST_USER=${HOST_TEST_USER}
      - BASE_PATH=${BASE_PATH}
      - TEMPLATE_PATH=${TEMPLATE_PATH}
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - sonod-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=sonod_projects_manager
      - POSTGRES_USER=${POSTGRES_USER:-sonod}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-sonod123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5446:5432"
    restart: unless-stopped
    networks:
      - sonod-network

#  nginx:
#    image: nginx:alpine
#    ports:
#      - "80:80"
#      - "443:443"
#    volumes:
#      - ./nginx.conf:/etc/nginx/nginx.conf
#      - ./ssl:/etc/nginx/ssl
#    depends_on:
#      - app
#    restart: unless-stopped
#    networks:
#      - sonod-network

volumes:
  postgres_data:

networks:
  sonod-network:
    driver: bridge
